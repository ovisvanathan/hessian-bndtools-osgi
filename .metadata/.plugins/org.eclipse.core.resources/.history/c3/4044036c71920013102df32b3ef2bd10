package decl.client;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import org.osgi.service.log.LogService;
import org.osgi.util.tracker.ServiceTracker;

import decl.api.IService;

public class ClientActivator  implements BundleActivator  {
	 private Client consumer;
	 LogService logService;
	 ServiceTracker apiServiceTracker;

	 ServiceTracker logServiceTracker;
	 
	    @Override
	    public void start(BundleContext bundleContext) throws Exception {
	      /*
	    	ServiceReference reference = 
	        		bundleContext.getServiceReference(IService.class.getName());
	 
	        consumer = new Client((IService) bundleContext.getService(reference));
	        consumer.startTimer();
		*/
            apiServiceTracker =
                    new ServiceTracker(bundleContext, IService.class.getName(), null);
            apiServiceTracker.open();

            IService  iserv = (IService) apiServiceTracker.getService();
            
            
	     // create a tracker and track the log service
            logServiceTracker =
                new ServiceTracker(bundleContext, LogService.class.getName(), null);
            logServiceTracker.open();
             
            // grab the service
            logService = (LogService) logServiceTracker.getService();
     
            if(logService != null)
                logService.log(LogService.LOG_INFO, "Yee ha, I'm logging!");
    
            if(iserv != null)
            	logService.log(LogService.LOG_INFO, iserv.execute("aloha"));
            
            
            
	    }
	 
	    @Override
	    public void stop(BundleContext bundleContext) throws Exception {
	        consumer.stopTimer();
	    }
}
